version: '3.8'
# docker-compose up && docker-compose rm -fsv # run and remove on exit

x-common-variables: &common-variables
  DB_ENGINE: django.db.backends.postgresql
  DB_NAME: zadala
  DB_USER: postgres
  DB_PASS: 1
  DB_HOST: db
  DB_PORT: 5432
  EMAIL_HOST_USER:
  EMAIL_HOST_PASSWORD:
  EMAIL_HOST_PORT: 587
  EMAIL_HOST_PROVIDER: smtp.gmail.com
  SECRET_KEY: my-secret
  GOOGLE_CLIENT_ID:
  GOOGLE_CLIENT_SECRET:
  AWS_SECRET_KEY_ID:
  AWS_SECRET_ACCESS_KEY:
  AWS_SNS_ARN:
  REDIS_HOST: redis
  REDIS_PORT: 6379
  REDIS_DB: 0
  REDIS_PASSWORD: ''


services:
  db:
    image: postgres
    container_name: postgresql
    restart: always
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 10s
      retries: 120
    ports:
      - "5432:5432"
    expose:
      - 5432
    environment:
      POSTGRES_PASSWORD: 1
      POSTGRES_DB: zadala

  # Database visualizer
  adminer:
    image: adminer
    container_name: adminer
    ports:
      - "8081:8080"
    depends_on:
      - db

  redis:
    image: redis:latest
    container_name: redis
    restart: always
    ports:
      - "6379:6379"
    expose:
      - 6379

  zadala-api:
    container_name: zadala
    build:
      context: ../
      dockerfile: deployments/Dockerfile
    ports:
      - "8000:8000"
    expose:
      - 8000
    environment: *common-variables
    command: sh -c "poetry run python manage.py migrate && poetry run python manage.py collectstatic --noinput && poetry run python manage.py runserver 0.0.0.0:8000"
    depends_on:
      db:
        condition: service_healthy

  zadala-rq-worker:
    container_name: zadala-rq-worker
    build:
      context: ../
      dockerfile: deployments/Dockerfile
    environment: *common-variables
    command: sh -c "poetry run python manage.py rqworker high default low"
    depends_on:
      - redis
